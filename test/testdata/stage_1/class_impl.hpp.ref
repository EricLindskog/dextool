#ifndef stub_class_impl_hpp
#define stub_class_impl_hpp
#include "class_impl.hpp"

class StubSimple;

namespace StubCallbackSimple {
struct IStubDtor { virtual void StubDtor() = 0;
};
} //NS:StubCallbackSimple

namespace StubInternalSimple {
class StubStubDtor {
public:
    StubCallbackSimple::IStubDtor* GetCallback();
    void SetCallback(StubCallbackSimple::IStubDtor* value);
    unsigned GetCallCounter() const;
    void ResetCallCounter();
private:
    friend class ::StubSimple;

    StubCallbackSimple::IStubDtor* callback;
    unsigned call_counter;
};
void StubInit(StubStubDtor* value);

class StubStubData {
public:
    StubStubData();
    ~StubStubData();

    StubInternalSimple::StubStubDtor& StubDtor();

private:
    StubInternalSimple::StubStubDtor stub_StubDtor;
};
} //NS:StubInternalSimple

class StubSimple : public Simple {
public:
    StubSimple();
    StubSimple(char x);
    StubSimple(int y);
    ~StubSimple();

public:
    StubInternalSimple::StubStubData& GetStub();

private:
    StubInternalSimple::StubStubData Stub_data;
};

#endif // stub_class_impl_hpp

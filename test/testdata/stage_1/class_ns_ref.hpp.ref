#ifndef stub_class_ns_ref_hpp
#define stub_class_ns_ref_hpp
#include "class_ns_ref.hpp"

namespace Foo {
class StubBar : public Foo::Bar {
public:
    StubBar();
};

} //NS:Foo

namespace StubCallbackGlass {
struct Ifunc1 { virtual Foo::Bar func1() = 0; };
struct Ifunc2 { virtual Foo::Bar & func2() = 0; };
struct Ifunc3 { virtual Foo::Bar * func3() = 0; };
struct Ifunc4 { virtual ::Foo::Bar func4() = 0; };
struct Ifunc5 { virtual ::Foo::Bar & func5() = 0; };
struct IStubDtor { virtual void StubDtor() = 0; };
} //NS:StubCallbackGlass

namespace StubInternalGlass {
struct Stubfunc1 {
    StubCallbackGlass::Ifunc1* callback;
    unsigned call_counter;
    Foo::Bar stub_return;
};
void StubInit(Stubfunc1* value);

struct Stubfunc2 {
    StubCallbackGlass::Ifunc2* callback;
    unsigned call_counter;
    Foo::Bar * stub_return;
};
void StubInit(Stubfunc2* value);

struct Stubfunc3 {
    StubCallbackGlass::Ifunc3* callback;
    unsigned call_counter;
    Foo::Bar * stub_return;
};
void StubInit(Stubfunc3* value);

struct Stubfunc4 {
    StubCallbackGlass::Ifunc4* callback;
    unsigned call_counter;
    ::Foo::Bar stub_return;
};
void StubInit(Stubfunc4* value);

struct Stubfunc5 {
    StubCallbackGlass::Ifunc5* callback;
    unsigned call_counter;
    ::Foo::Bar * stub_return;
};
void StubInit(Stubfunc5* value);

struct StubStubDtor {
    StubCallbackGlass::IStubDtor* callback;
    unsigned call_counter;
};
void StubInit(StubStubDtor* value);

class StubStubData {
public:
    StubStubData();
    ~StubStubData();

    StubInternalGlass::Stubfunc1& func1();
    StubInternalGlass::Stubfunc2& func2();
    StubInternalGlass::Stubfunc3& func3();
    StubInternalGlass::Stubfunc4& func4();
    StubInternalGlass::Stubfunc5& func5();
    StubInternalGlass::StubStubDtor& StubDtor();

private:
    StubInternalGlass::Stubfunc1 stub_func1;
    StubInternalGlass::Stubfunc2 stub_func2;
    StubInternalGlass::Stubfunc3 stub_func3;
    StubInternalGlass::Stubfunc4 stub_func4;
    StubInternalGlass::Stubfunc5 stub_func5;
    StubInternalGlass::StubStubDtor stub_StubDtor;
};
} //NS:StubInternalGlass

class StubGlass : public Glass {
public:
    virtual Foo::Bar func1();
    virtual Foo::Bar & func2();
    virtual Foo::Bar * func3();
    virtual ::Foo::Bar func4();
    virtual ::Foo::Bar & func5();
public:
    StubGlass();
    virtual ~StubGlass();

public:
    StubInternalGlass::StubStubData& GetStub();

private:
    StubInternalGlass::StubStubData Stub_data;
};

#endif // stub_class_ns_ref_hpp

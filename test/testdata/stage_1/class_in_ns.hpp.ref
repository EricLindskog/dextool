#ifndef stub_class_in_ns_hpp
#define stub_class_in_ns_hpp
#include "class_in_ns.hpp"

namespace foo {
namespace bar {
class StubSmurf;

namespace StubCallbackSmurf {
struct IopAssign_const_Smurf { virtual foo::bar::Smurf & opAssign_const_Smurf(const foo::bar::Smurf & other) = 0;
};
struct IStubDtor { virtual void StubDtor() = 0;
};
} //NS:StubCallbackSmurf

namespace StubInternalSmurf {
class StubopAssign_const_Smurf {
public:
    StubCallbackSmurf::IopAssign_const_Smurf* GetCallback();
    void SetCallback(StubCallbackSmurf::IopAssign_const_Smurf* value);
    unsigned GetCallCounter() const;
    void ResetCallCounter();
    Smurf* GetParam_other();
    foo::bar::Smurf *& SetReturn();
private:
    friend class ::foo::bar::StubSmurf;

    StubCallbackSmurf::IopAssign_const_Smurf* callback;
    unsigned call_counter;
    Smurf* Param_other;
    foo::bar::Smurf * stub_return;
};
void StubInit(StubopAssign_const_Smurf* value);

class StubStubDtor {
public:
    StubCallbackSmurf::IStubDtor* GetCallback();
    void SetCallback(StubCallbackSmurf::IStubDtor* value);
    unsigned GetCallCounter() const;
    void ResetCallCounter();
private:
    friend class ::foo::bar::StubSmurf;

    StubCallbackSmurf::IStubDtor* callback;
    unsigned call_counter;
};
void StubInit(StubStubDtor* value);

class StubStubData {
public:
    StubStubData();
    ~StubStubData();

    StubInternalSmurf::StubopAssign_const_Smurf& opAssign_const_Smurf();
    StubInternalSmurf::StubStubDtor& StubDtor();

private:
    StubInternalSmurf::StubopAssign_const_Smurf stub_opAssign_const_Smurf;
    StubInternalSmurf::StubStubDtor stub_StubDtor;
};
} //NS:StubInternalSmurf

class StubSmurf : public foo::bar::Smurf {
public:
    virtual foo::bar::Smurf & operator=(const foo::bar::Smurf & other);
public:
    StubSmurf();
    StubSmurf(const foo::bar::Smurf & other);
    virtual ~StubSmurf();

public:
    StubInternalSmurf::StubStubData& GetStub();

private:
    mutable StubInternalSmurf::StubStubData Stub_data;
};

} //NS:bar

} //NS:foo

#endif // stub_class_in_ns_hpp

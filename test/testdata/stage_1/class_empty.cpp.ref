#include "stub_class_empty.hpp"

namespace StubInternalSimple {
::StubSimple** stubstubsimplemanager_pool = 0;
unsigned stubstubsimplemanager_size = 0;
unsigned stubstubsimplemanager_next = 0;

void StubStubManagerGrowPool() {
    if (stubstubsimplemanager_pool == 0) {
        stubstubsimplemanager_pool = new ::StubSimple*[2];
        stubstubsimplemanager_size = 2;
        stubstubsimplemanager_next = 0;
    }
    else {
        ::StubSimple** old = stubstubsimplemanager_pool;
        unsigned old_size = stubstubsimplemanager_size;
        stubstubsimplemanager_size = stubstubsimplemanager_size * 2;
        stubstubsimplemanager_pool = new ::StubSimple*[stubstubsimplemanager_size];
        for (unsigned i = 0; i < old_size; ++i) {
            stubstubsimplemanager_pool[i] = old[i];
        }
        delete [] old;
    }
}

void StubStubManagerRegister(::StubSimple* instance) {
    if (stubstubsimplemanager_pool == 0 || stubstubsimplemanager_next == stubstubsimplemanager_size) {
        StubStubManagerGrowPool();
    }
    stubstubsimplemanager_pool[stubstubsimplemanager_next] = instance;
    stubstubsimplemanager_next += 1;
}

void StubStubManagerUnRegister(::StubSimple* instance) {
    for (unsigned i = 0; i < stubstubsimplemanager_size; ++i) {
        if (stubstubsimplemanager_pool[i] == instance) {
            stubstubsimplemanager_pool[i] = 0;
            break;
        }
    }
}

} //NS:StubInternalSimple

StubStubSimpleManager::StubStubSimpleManager() {
}

StubStubSimpleManager::~StubStubSimpleManager() {
    for (unsigned i = 0; i < ::StubInternalSimple::stubstubsimplemanager_size; ++i) {
        if (::StubInternalSimple::stubstubsimplemanager_pool[i] != 0) {
            delete ::StubInternalSimple::stubstubsimplemanager_pool[i];
        }
    }
    delete [] ::StubInternalSimple::stubstubsimplemanager_pool;
    ::StubInternalSimple::stubstubsimplemanager_pool = 0;
    ::StubInternalSimple::stubstubsimplemanager_size = 0;
    ::StubInternalSimple::stubstubsimplemanager_next = 0;
}

::StubSimple* StubStubSimpleManager::GetInstance() {
    if (::StubInternalSimple::stubstubsimplemanager_size > 0) {
        return ::StubInternalSimple::stubstubsimplemanager_pool[0];
    }
    return reinterpret_cast< ::StubSimple*>(0);
}

::StubSimple* StubStubSimpleManager::GetInstance(unsigned nth) {
    if (::StubInternalSimple::stubstubsimplemanager_size > nth) {
        return ::StubInternalSimple::stubstubsimplemanager_pool[nth];
    }
    return reinterpret_cast< ::StubSimple*>(0);
}


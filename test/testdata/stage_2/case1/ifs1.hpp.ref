#ifndef stub_ifs1_hpp
#define stub_ifs1_hpp
#include "ifs1.hpp"

namespace StubCallbackIfs2 {
struct Iifs2_func1 { virtual int ifs2_func1(int x0, char x1) = 0; };
struct IdtorIfs2 { virtual void dtorIfs2() = 0; };
} //NS:StubCallbackIfs2

namespace StubInternalIfs2 {
struct StubCallback {
    StubCallbackIfs2::Iifs2_func1* ifs2_func1;
    StubCallbackIfs2::IdtorIfs2* dtorIfs2;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned ifs2_func1;
    unsigned dtorIfs2;
};
void StubInit(StubCounter* value);

struct StubStatic {
    int ifs2_func1_param_x0;
    char ifs2_func1_param_x1;
    int ifs2_func1_return;
};
void StubInit(StubStatic* value);

} //NS:StubInternalIfs2

class StubIfs2 : public Ifs2 {
public:
    virtual int ifs2_func1(int x0, char x1);
public:
    StubIfs2();
    virtual ~StubIfs2();

public:
    StubInternalIfs2::StubCallback& StubGetCallback();
    StubInternalIfs2::StubCounter& StubGetCounter();
    StubInternalIfs2::StubStatic& StubGetStatic();

private:
    StubInternalIfs2::StubCallback StubIfs2_callback;
    StubInternalIfs2::StubCounter StubIfs2_cnt;
    StubInternalIfs2::StubStatic StubIfs2_static;
};

namespace StubCallbackIfs3 {
struct Idostuff { virtual void dostuff() = 0; };
struct IdtorIfs3 { virtual void dtorIfs3() = 0; };
} //NS:StubCallbackIfs3

namespace StubInternalIfs3 {
struct StubCallback {
    StubCallbackIfs3::Idostuff* dostuff;
    StubCallbackIfs3::IdtorIfs3* dtorIfs3;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned dostuff;
    unsigned dtorIfs3;
};
void StubInit(StubCounter* value);

} //NS:StubInternalIfs3

class StubIfs3 : public Ifs3 {
public:
    virtual void dostuff();
public:
    StubIfs3();
    virtual ~StubIfs3();

public:
    StubInternalIfs3::StubCallback& StubGetCallback();
    StubInternalIfs3::StubCounter& StubGetCounter();

private:
    StubInternalIfs3::StubCallback StubIfs3_callback;
    StubInternalIfs3::StubCounter StubIfs3_cnt;
};

namespace StubCallbackIfs1 {
struct Iifs2_func1 { virtual int ifs2_func1(int x0, char x1) = 0; };
struct Irun { virtual void run() = 0; };
struct Iget_ifc2 { virtual Ifs2& get_ifc2() = 0; };
struct Iget_ifc3 { virtual Ifs3& get_ifc3() = 0; };
struct IdtorIfs1 { virtual void dtorIfs1() = 0; };
} //NS:StubCallbackIfs1

namespace StubInternalIfs1 {
struct StubCallback {
    StubCallbackIfs1::Iifs2_func1* ifs2_func1;
    StubCallbackIfs1::Irun* run;
    StubCallbackIfs1::Iget_ifc2* get_ifc2;
    StubCallbackIfs1::Iget_ifc3* get_ifc3;
    StubCallbackIfs1::IdtorIfs1* dtorIfs1;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned ifs2_func1;
    unsigned run;
    unsigned get_ifc2;
    unsigned get_ifc3;
    unsigned dtorIfs1;
};
void StubInit(StubCounter* value);

struct StubStatic {
    int ifs2_func1_param_x0;
    char ifs2_func1_param_x1;
    int ifs2_func1_return;
    Ifs2* get_ifc2_return;
    Ifs3* get_ifc3_return;
};
void StubInit(StubStatic* value);

} //NS:StubInternalIfs1

class StubIfs1 : public Ifs1 {
public:
    virtual int ifs2_func1(int x0, char x1);
public:
    virtual void run();
    virtual Ifs2& get_ifc2();
    virtual Ifs3& get_ifc3();
public:
    StubIfs1();
    virtual ~StubIfs1();

public:
    StubInternalIfs1::StubCallback& StubGetCallback();
    StubInternalIfs1::StubCounter& StubGetCounter();
    StubInternalIfs1::StubStatic& StubGetStatic();

private:
    StubInternalIfs1::StubCallback StubIfs1_callback;
    StubInternalIfs1::StubCounter StubIfs1_cnt;
    StubInternalIfs1::StubStatic StubIfs1_static;
};

#endif // stub_ifs1_hpp

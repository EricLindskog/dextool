#include "stub_class_inherit.hpp"

namespace StubInternalFoo {
void StubInit(StubCallback* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCallback);
    for (; d != end; ++d) {
        *d = 0;
    }
}

void StubInit(StubCounter* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCounter);
    for (; d != end; ++d) {
        *d = 0;
    }
}

} //NS:StubInternalFoo

void StubFoo::func2() {
    StubFoo_cnt.func2++;

    if (StubFoo_callback.func2 != 0) {
        StubFoo_callback.func2->func2();
    }
}

void StubFoo::func3() {
    StubFoo_cnt.func3++;

    if (StubFoo_callback.func3 != 0) {
        StubFoo_callback.func3->func3();
    }
}

namespace BarSpace {
namespace StubInternalBar {
void StubInit(StubCallback* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCallback);
    for (; d != end; ++d) {
        *d = 0;
    }
}

void StubInit(StubCounter* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCounter);
    for (; d != end; ++d) {
        *d = 0;
    }
}

} //NS:StubInternalBar

void StubBar::func5() {
    StubBar_cnt.func5++;

    if (StubBar_callback.func5 != 0) {
        StubBar_callback.func5->func5();
    }
}

} //NS:BarSpace

namespace StubInternalWarp {
void StubInit(StubCallback* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCallback);
    for (; d != end; ++d) {
        *d = 0;
    }
}

void StubInit(StubCounter* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCounter);
    for (; d != end; ++d) {
        *d = 0;
    }
}

} //NS:StubInternalWarp

void StubWarp::func2() {
    StubWarp_cnt.func2++;

    if (StubWarp_callback.func2 != 0) {
        StubWarp_callback.func2->func2();
    }
}

void StubWarp::func3() {
    StubWarp_cnt.func3++;

    if (StubWarp_callback.func3 != 0) {
        StubWarp_callback.func3->func3();
    }
}

void StubWarp::func4() {
    StubWarp_cnt.func4++;

    if (StubWarp_callback.func4 != 0) {
        StubWarp_callback.func4->func4();
    }
}

namespace StubInternalSmurf {
void StubInit(StubCallback* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCallback);
    for (; d != end; ++d) {
        *d = 0;
    }
}

void StubInit(StubCounter* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCounter);
    for (; d != end; ++d) {
        *d = 0;
    }
}

} //NS:StubInternalSmurf

void StubSmurf::func2() {
    StubSmurf_cnt.func2++;

    if (StubSmurf_callback.func2 != 0) {
        StubSmurf_callback.func2->func2();
    }
}

void StubSmurf::func3() {
    StubSmurf_cnt.func3++;

    if (StubSmurf_callback.func3 != 0) {
        StubSmurf_callback.func3->func3();
    }
}

void StubSmurf::func5() {
    StubSmurf_cnt.func5++;

    if (StubSmurf_callback.func5 != 0) {
        StubSmurf_callback.func5->func5();
    }
}

void StubSmurf::func4() {
    StubSmurf_cnt.func4++;

    if (StubSmurf_callback.func4 != 0) {
        StubSmurf_callback.func4->func4();
    }
}

StubSmurf::StubSmurf() {
    StubInternalSmurf::StubInit(&StubSmurf_callback);
    StubInternalSmurf::StubInit(&StubSmurf_cnt);
}

StubSmurf::~StubSmurf() {
    StubSmurf_cnt.dtorSmurf++;

    if (StubSmurf_callback.dtorSmurf != 0) {
        StubSmurf_callback.dtorSmurf->dtorSmurf();
    }
}

namespace StubInternalDaddySmurf {
void StubInit(StubCallback* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCallback);
    for (; d != end; ++d) {
        *d = 0;
    }
}

void StubInit(StubCounter* value) {
    char* d = reinterpret_cast<char*>(value);
    char* end = d + sizeof(StubCounter);
    for (; d != end; ++d) {
        *d = 0;
    }
}

} //NS:StubInternalDaddySmurf

void StubDaddySmurf::func2() {
    StubDaddySmurf_cnt.func2++;

    if (StubDaddySmurf_callback.func2 != 0) {
        StubDaddySmurf_callback.func2->func2();
    }
}

void StubDaddySmurf::func3() {
    StubDaddySmurf_cnt.func3++;

    if (StubDaddySmurf_callback.func3 != 0) {
        StubDaddySmurf_callback.func3->func3();
    }
}

void StubDaddySmurf::func4() {
    StubDaddySmurf_cnt.func4++;

    if (StubDaddySmurf_callback.func4 != 0) {
        StubDaddySmurf_callback.func4->func4();
    }
}

StubDaddySmurf::StubDaddySmurf() {
    StubInternalDaddySmurf::StubInit(&StubDaddySmurf_callback);
    StubInternalDaddySmurf::StubInit(&StubDaddySmurf_cnt);
}

StubDaddySmurf::~StubDaddySmurf() {
    StubDaddySmurf_cnt.dtorDaddySmurf++;

    if (StubDaddySmurf_callback.dtorDaddySmurf != 0) {
        StubDaddySmurf_callback.dtorDaddySmurf->dtorDaddySmurf();
    }
}


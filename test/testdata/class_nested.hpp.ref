#ifndef stub_class_nested_hpp
#define stub_class_nested_hpp
#include "class_nested.hpp"

namespace StubCallbackOuterClass {
struct IdtorOuterClass { virtual void dtorOuterClass() = 0; };
} //NS:StubCallbackOuterClass

namespace StubInternalOuterClass {
struct StubCallback {
    StubCallbackOuterClass::IdtorOuterClass* dtorOuterClass;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned dtorOuterClass;
};
void StubInit(StubCounter* value);

} //NS:StubInternalOuterClass

class StubOuterClass : public OuterClass {
public:
    StubOuterClass();
    ~StubOuterClass();

public:
    StubInternalOuterClass::StubCallback& StubGetCallback();
    StubInternalOuterClass::StubCounter& StubGetCounter();

private:
    StubInternalOuterClass::StubCallback StubOuterClass_callback;
    StubInternalOuterClass::StubCounter StubOuterClass_cnt;
};

namespace StubCallbackInnerClass {
struct IdtorInnerClass { virtual void dtorInnerClass() = 0; };
} //NS:StubCallbackInnerClass

namespace StubInternalInnerClass {
struct StubCallback {
    StubCallbackInnerClass::IdtorInnerClass* dtorInnerClass;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned dtorInnerClass;
};
void StubInit(StubCounter* value);

} //NS:StubInternalInnerClass

class StubInnerClass : public OuterClass::InnerClass {
public:
    StubInnerClass();
    ~StubInnerClass();

public:
    StubInternalInnerClass::StubCallback& StubGetCallback();
    StubInternalInnerClass::StubCounter& StubGetCounter();

private:
    StubInternalInnerClass::StubCallback StubInnerClass_callback;
    StubInternalInnerClass::StubCounter StubInnerClass_cnt;
};

namespace StubCallbackInnerClass2 {
struct IdtorInnerClass2 { virtual void dtorInnerClass2() = 0; };
} //NS:StubCallbackInnerClass2

namespace StubInternalInnerClass2 {
struct StubCallback {
    StubCallbackInnerClass2::IdtorInnerClass2* dtorInnerClass2;
};
void StubInit(StubCallback* value);

struct StubCounter {
    unsigned dtorInnerClass2;
};
void StubInit(StubCounter* value);

} //NS:StubInternalInnerClass2

class StubInnerClass2 : public OuterClass::InnerClass::InnerClass2 {
public:
    StubInnerClass2();
    ~StubInnerClass2();

public:
    StubInternalInnerClass2::StubCallback& StubGetCallback();
    StubInternalInnerClass2::StubCounter& StubGetCounter();

private:
    StubInternalInnerClass2::StubCallback StubInnerClass2_callback;
    StubInternalInnerClass2::StubCounter StubInnerClass2_cnt;
};

#endif // stub_class_nested_hpp

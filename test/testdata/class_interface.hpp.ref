#ifndef class_interface.hpp.out
#define class_interface.hpp.out
class StubSimple : public Simple {
public:
    StubSimple();
    virtual ~StubSimple();

    virtual void func1();
    virtual void operator=(const Simple& other);
private:
    virtual char* func3();
};

namespace StubCallbackSimple {
struct IdtorSimple { virtual void dtorSimple() = 0; };
struct Ifunc1 { virtual void func1() = 0; };
struct IopAssign { virtual void opAssign(const Simple& other) = 0; };
struct Ifunc3 { virtual char* func3() = 0; };
} //NS:StubCallbackSimple

namespace StubInternalSimple {
struct StubData {
    unsigned dtor_Simple_cnt;
    StubSimpleCallback::IdtorSimple* dtor_Simple_callback;

    unsigned func1_cnt;
    StubSimpleCallback::Ifunc1* func1_callback;

    unsigned op_assign_cnt;
    Simple* op_assign_params_other;
    StubSimpleCallback::Iop_assign* op_assign_callback;

    unsigned func3_cnt;
    char* func3_return;
};
} //NS:StubInternalSimple

#endif // class_interface.hpp.out
